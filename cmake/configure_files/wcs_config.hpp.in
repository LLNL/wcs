#ifndef WCS_CONFIG_HPP__
#define WCS_CONFIG_HPP__

/* Version string for WCS */
#define WCS_VERSION @WCS_VERSION@
#cmakedefine WCS_GIT_VERSION @WCS_GIT_VERSION@

/* Defined for the generation of the c++ code of a sbml file */
#cmakedefine CMAKE_CXX_COMPILER "@CMAKE_CXX_COMPILER@"
#ifndef CMAKE_CXX_COMPILER
#define CMAKE_CXX_COMPILER "cc"
#endif

#define CMAKE_CXX_FLAGS "@CMAKE_CXX_FLAGS@"

#define WCS_INCLUDE_DIR " -I@WCS_SRC_DIR@/src "

#define CMAKE_CXX_SHARED_LIBRARY_FLAGS "@CMAKE_CXX_SHARED_LIBRARY_FLAGS@"

/* Defined if WCS is in debug mode */
#cmakedefine WCS_DEBUG

#cmakedefine WCS_GNU_LINUX

#cmakedefine WCS_HAS_SUNDIALS
#cmakedefine WCS_HAS_SBML
#cmakedefine WCS_HAS_EXPRTK
#cmakedefine WCS_HAS_CEREAL
#cmakedefine WCS_HAS_CATCH2
#cmakedefine WCS_HAS_VTUNE
#cmakedefine WCS_HAS_HPCTOOLKIT
#cmakedefine WCS_HAS_ROSS
#cmakedefine WCS_HAS_OPENMP
#cmakedefine WCS_HAS_NUMA
#cmakedefine WCS_HAS_METIS
#cmakedefine WCS_HAS_STD_FILESYSTEM
#cmakedefine WCS_HAS_PROTOBUF

#cmakedefine WCS_VERTEX_LIST_TYPE @WCS_VERTEX_LIST_TYPE@
#cmakedefine WCS_OUT_EDGE_LIST_TYPE @WCS_OUT_EDGE_LIST_TYPE@

#ifdef WCS_HAS_OPENMP
#include <omp.h>
#endif

#ifdef WCS_HAS_NUMA
#include <numa.h>
#endif

#ifdef WCS_HAS_VTUNE
#include <ittnotify.h>
#endif

#ifdef WCS_HAS_HPCTOOLKIT
#include <hpctoolkit.h>
#endif

/* flag to allow disabling a selective region of the code
 * during performance profiling */
#cmakedefine WCS_PERF_PROF
#if !defined(WCS_PERF_PROF)
 #if defined(WCS_HAS_VTUNE) || defined(WCS_HAS_HPCTOOLKIT)
  #define WCS_PERF_PROF 1
 #endif
#endif

#endif /* WCS_CONFIG_H__ */
